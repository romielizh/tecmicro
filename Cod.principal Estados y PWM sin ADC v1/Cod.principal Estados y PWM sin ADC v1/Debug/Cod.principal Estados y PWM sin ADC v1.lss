
Cod.principal Estados y PWM sin ADC v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000190  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000001bf  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000001cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f5  00000000  00000000  00000235  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000639  00000000  00000000  00000c2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000349  00000000  00000000  00001263  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  000015ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000010e  0000010e  00000182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.PWMconfig 00000014  000000fa  000000fa  0000016e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.main    00000028  000000bc  000000bc  00000130  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_fini 00000002  00000116  00000116  0000018a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_funcs_on_exit 00000002  00000118  00000118  0000018c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_simulator_exit 00000002  0000011a  0000011a  0000018e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.exit    00000016  000000e4  000000e4  00000158  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._Exit   00000004  00000112  00000112  00000186  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  58:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  5c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  60:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  64:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	e8 e6       	ldi	r30, 0x68	; 104
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	40 e0       	ldi	r20, 0x00	; 0
  7a:	17 c0       	rjmp	.+46     	; 0xaa <__do_clear_bss+0x8>
  7c:	b5 91       	lpm	r27, Z+
  7e:	a5 91       	lpm	r26, Z+
  80:	35 91       	lpm	r19, Z+
  82:	25 91       	lpm	r18, Z+
  84:	05 91       	lpm	r16, Z+
  86:	07 fd       	sbrc	r16, 7
  88:	0c c0       	rjmp	.+24     	; 0xa2 <__do_clear_bss>
  8a:	95 91       	lpm	r25, Z+
  8c:	85 91       	lpm	r24, Z+
  8e:	ef 01       	movw	r28, r30
  90:	f9 2f       	mov	r31, r25
  92:	e8 2f       	mov	r30, r24
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0x20>
  9e:	fe 01       	movw	r30, r28
  a0:	04 c0       	rjmp	.+8      	; 0xaa <__do_clear_bss+0x8>

000000a2 <__do_clear_bss>:
  a2:	1d 92       	st	X+, r1
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	e1 f7       	brne	.-8      	; 0xa2 <__do_clear_bss>
  aa:	e8 36       	cpi	r30, 0x68	; 104
  ac:	f4 07       	cpc	r31, r20
  ae:	31 f7       	brne	.-52     	; 0x7c <__do_copy_data+0x8>
  b0:	0e 94 5e 00 	call	0xbc	; 0xbc <_etext>
  b4:	0c 94 72 00 	jmp	0xe4	; 0xe4 <exit>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>

Disassembly of section .text:

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.PWMconfig:

000000fa <PWMconfig>:
}

void PWMconfig()
{
	// Configurar Timer0 para PWM no invertido en OC0A (PD6) y OC0B (PD5)
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00) | (1 << WGM01);
  fa:	84 b5       	in	r24, 0x24	; 36
  fc:	83 6a       	ori	r24, 0xA3	; 163
  fe:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01);  // Establecer el preescalador a 8 para una frecuencia base
 100:	85 b5       	in	r24, 0x25	; 37
 102:	82 60       	ori	r24, 0x02	; 2
 104:	85 bd       	out	0x25, r24	; 37

	// Configurar los pines OC0A (PD6) y OC0B (PD5) como salidas
	DDRD |= (1 << DDD6) | (1 << DDD5);
 106:	8a b1       	in	r24, 0x0a	; 10
 108:	80 66       	ori	r24, 0x60	; 96
 10a:	8a b9       	out	0x0a, r24	; 10
 10c:	08 95       	ret

Disassembly of section .text.main:

000000bc <main>:
{
	// Ajustar los ciclos de trabajo para OC0A (PD6) y OC0B (PD5)
	OCR0A = 0x7F;  // Configuración de un ciclo de trabajo del 50% en OC0A
	OCR0B = 0x7F;   // Configuración de un ciclo de trabajo del 50% en OC0B
	
	PORTB |= (1 << DDB1)|(0 << DDB2)|(1 << DDB3)|(0 << DDB4); //Motores adelante
  bc:	8a b1       	in	r24, 0x0a	; 10
  be:	1a b8       	out	0x0a, r1	; 10
  c0:	8a b1       	in	r24, 0x0a	; 10
  c2:	84 60       	ori	r24, 0x04	; 4
  c4:	8a b9       	out	0x0a, r24	; 10
  c6:	8a b1       	in	r24, 0x0a	; 10
  c8:	80 61       	ori	r24, 0x10	; 16
  ca:	8a b9       	out	0x0a, r24	; 10
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	1a b8       	out	0x0a, r1	; 10
  d0:	84 b1       	in	r24, 0x04	; 4
  d2:	8e 61       	ori	r24, 0x1E	; 30
  d4:	84 b9       	out	0x04, r24	; 4
  d6:	0e 94 7d 00 	call	0xfa	; 0xfa <PWMconfig>
  da:	8b b1       	in	r24, 0x0b	; 11
  dc:	1b b8       	out	0x0b, r1	; 11
  de:	8b b1       	in	r24, 0x0b	; 11
  e0:	1b b8       	out	0x0b, r1	; 11
  e2:	fb cf       	rjmp	.-10     	; 0xda <main+0x1e>

Disassembly of section .text.__dummy_fini:

00000116 <_fini>:
 116:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000118 <__funcs_on_exit>:
 118:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000011a <__simulator_exit>:
 11a:	08 95       	ret

Disassembly of section .text.exit:

000000e4 <exit>:
  e4:	ec 01       	movw	r28, r24
  e6:	0e 94 8c 00 	call	0x118	; 0x118 <__funcs_on_exit>
  ea:	0e 94 8b 00 	call	0x116	; 0x116 <_fini>
  ee:	ce 01       	movw	r24, r28
  f0:	0e 94 8d 00 	call	0x11a	; 0x11a <__simulator_exit>
  f4:	ce 01       	movw	r24, r28
  f6:	0e 94 89 00 	call	0x112	; 0x112 <_Exit>

Disassembly of section .text._Exit:

00000112 <_Exit>:
 112:	0e 94 5c 00 	call	0xb8	; 0xb8 <_exit>
